# mpi executables write to pout files instead of stdout. pout files are named 
# (by default) pout.0, pout.1 etc., one for each processor. Rename them here.
main.poutBaseName = pout.@ID


#########################   DOMAIN DETAILS   ###########################

main.domain_size = 6144e+3 6144e+3 1.0e+3   # (m)
amr.num_cells = @NCELLS @NCELLS 10          # Nx, Ny, vertical layers
amr.is_periodic = 0 0 0

# vertical layer depths (0 = surface, 1 = base)
amr.sigma = 0.0 0.1663 0.3179 0.4547 0.5768 0.6842 0.7768 0.8547 0.9179 0.9663 1.0000

# Set output to follow climate and forecast (CF) metadata conventions. CF includes a
# single mesh level and fields are time averaged rather than snapshots. Output fields 
# are labeled using CF standard names.
#amr.plot_style_cf = true
#amr.plot_style_amr = false
#CFIO.level = 0      # base resolution

# include time series of domain-wide data such as ice volume
#CFIO.whole_domain_diagnostics = true

# specify the coordinate system (optional for BISICLES but needed for CF compliance)
#CRS.EPSG = 3031 # WGS 84 / Antarctic Polar Stereographic
#CRS.origin_x = -3072000.0
#CRS.origin_y = -3072000.0


#####################   BULK CONSITUTIVE RELATION   #####################

# Use L1L2 approximation to the Stokes equations
main.constitutiveRelation = L1L2
L1L2.delta = 1.0e-1

# Choose temperature dependant rate factor A(T) as in Cuffey and Paterson (2010)
main.rateFactor = patersonRate
patersonRate.epsSqr0 = 1.0e-12

# Physical constants
constants.ice_density = 918


###########################   BED TOPOGRAPHY   #############################

geometry.problem_type = LevelData
inputLevelData.geometryFile = /nobackup/earjbar/data/ant-minbed64-s-geometry-1km.2d.hdf5
inputLevelData.thicknessName = thck
inputLevelData.topographyName = topg


############################   SLIDING LAW   #############################

# Basal friction calculated by Python script
geometry.beta_type = Python
PythonBasalFriction.module = basal_friction_@ID
PythonBasalFriction.function = bedFricCalc

# Setup Tsai sliding law
main.basalFrictionRelation = pressureLimitedLaw
BasalFrictionPressureLimitedLaw.coefficient = 0.6
BasalFrictionPressureLimitedLaw.model = Tsai
BasalFrictionPressureLimitedLaw.tillPressureFactor = 0.99
BasalFrictionRelation.tillPressureFactor = 0.99     # Pressure factor control speed

# Default to Weertman (powerlaw) sliding when frozen bed
BasalFrictionPressureLimitedLaw.basalFrictionRelation = powerLaw
BasalFrictionPowerLaw.m = 0.333
BasalFrictionPowerLaw.includeEffectivePressure = false

thin_ice_drag.extra = 10.0 # extra linear drag to impose on thin ice, even if floating
thin_ice_drag.thickness = 10.0 # max thickness of thin ice


##########################  THERMODYNAMICS  ############################

# initialise with Pattyn temperature field
temperature.type = LevelData
inputLevelData.temperatureFile = /nobackup/earjbar/data/antarctica-temperature-4km.2d.hdf5
inputLevelData.temperatureName = temp000000

# Activate thermodynamics component (Aschwanden et al, 2012; doi: 10.3189/2012JoG11J088)
#amr.isothermal = false

# Energy density E is composed from temperature and water fraction and is a 3-D field
# with values at the centre of each grid cell in each layer.

# Set surface boundary condition to temperature (in K) rather than heat flux
#surfaceHeatBoundaryData.Dirichlett = true  # false by default
#surfaceHeatBoundaryData.Temperature = true # true by default

# Surface temperature determined by altitude (python module)
#surfaceHeatBoundaryData.type = pythonFlux
#surfaceHeatBoundaryData.module = surface_temp_module
#surfaceHeatBoundaryData.function = surface_temperature

# Geothermal flux (in J/a/m^2)
#basalHeatBoundaryData.type = LevelData
#basalHeatBoundaryData.n = 1
#basalHeatBoundaryData.timeStep = 1.0e+10
#basalHeatBoundaryData.startTime = 0.0
#basalHeatBoundaryData.fileFormat = /nobackup/earjbar/data/Heatflux_ShapiroRitzwoller2004_antarctica_plismip_8kmx8km_768.2d.hdf5
#basalHeatBoundaryData.name = Hflux


##########################  HYDROLOGY  ############################

# rate for till water to drain (into putative ground water system)
#tillWaterDrainFactor.type = constantFlux
#tillWaterDrainFactor.flux_value = 0.3

# Limit till water to maximum value
#ColumnThermodynamics.till_water_max = 2.0 # (default 4.0 m)



###########################  CALVING MODEL  ############################

# Fixed front calving model maintains zero ice thickness in regions that initially have 
# no ice and also prevents ice thickness from dropping below min_thickness
# Holds the calving front steady (reasonable approximation for Antarctica)
CalvingModel.type = FixedFrontCalvingModel
CalvingModel.min_thickness = 1.0    # (m)


#############################  NUMERICS  ###############################

# initial guess 
amr.do_initial_velocity_guess = 1
amr.do_initial_velocity_solve = 1
amr.initial_velocity_guess_type = 1     # linear PDE
amr.initial_velocity_guess_const_mu = 2.9e+6
amr.initial_velocity_guess_solver_type = 1      # JFNk

# velocity solve type -- 0 = Picard, 1 = JFNK
amr.velocity_solver_type = 1
# JFNK parameters
JFNKSolver.vtopSafety = 0.95
JFNKSolver.minPicardIterations = 6 # jfnk working poorly at high res.
JFNKSolver.maxIter = 2
JFNKSolver.maxIter_init = 16 #
JFNKSolver.absTol = 1.0e+5
JFNKSolver.relTol = 1.0e-3
JFNKSolver.solverType = 0 # Relax solver
JFNKSolver.RelaxRelTol = 1.0e-3
JFNKSolver.RelaxHang = 0.99
JFNKSolver.maxRelaxIter = 15
JFNKSolver.normType = 0
JFNKSolver.verbosity = 5
JFNKSolver.vtopRelaxTol = 0.005
JFNKSolver.vtopRelaxMinIter = 8
JFNKSolver.numMGSmooth = 8
JFNKSolver.numMGIter = 1
JFNKSolver.h = 0.025
JFNKSolver.switchRate = 1.3 # jfnk working poorly at high res

JFNKSolver.minStepFactor = 0.25
#JFNKSolver.writeResiduals = true
#JFNKSolver.muMin = 1.0e+4
#JFNKSolver.uMaxAbs = 1.0e+6
amr.velocity_solve_interval = 1

JFNKSolver.eliminateFastIce = true # false in Mira's
JFNKSolver.eliminateFastIceEdgeOnly = true # false in Mira's
JFNKSolver.eliminateFastIceSpeed = 2.0e+5 # 8.0e+4 in Mira's
amr.eliminate_remote_ice = true
amr.eliminate_remote_ice_max_iter = 40
amr.eliminate_remote_ice_tol = 1.0
amr.max_advection_speed = 2.0e+4

#add an artificial additional drag term to potentially problematic cells
JFNKSolver.artificialDragCoef = 1.0e-4
JFNKSolver.artificialDragPower = 8
velocity_rhs.max_rhs_dx = 1.0e+9 # limits steep slopes


########################   ADAPTIVE MESH OPTIONS   #########################

amr.maxLevel = 10         # finest level allowed in simulation
amr.ref_ratio = 2 2 2 2 2 2 2 2 2 2 2
amr.regrid_interval = 8   # number of timesteps between regridding
amr.blockFactor = 16      # block factor used in grid generation
amr.fill_ratio = 0.85     # how efficient are the grids
amr.nestingRadius = 1     # proper nesting radius required
amr.tags_grow = 4         # amount to buffer tags
#amr.tagSubsetBoxesFile = /work/n02/shared/madhkri_/Bisicles/data/tag_subset.ant
amr.tagCap = @TAGCAP
amr.interpolate_zb = 1    # *do not* go back to the IBC to regrid geometry
amr.max_box_size = 64     # largest box length allowed

#AMR tagging
amr.tag_on_grad_velocity = 0

amr.tag_on_grounded_laplacian_velocity = 1
amr.lap_vel_tagging_val = 1500
amr.lap_vel_tagging_max_basal_friction_coef = 250000.0

amr.tag_grounding_line = 1
amr.grounding_line_tagging_min_vel = 10.0
amr.grounding_line_tagging_max_basal_friction_coef = 250000.0
amr.grounding_line_subdivision = 4

amr.tag_vel_dx = 1
amr.vel_dx_tagging_val = 3.0e+5
amr.vel_dx_finest_level_grounded = 3
amr.vel_dx_finest_level_floating = 1

#misc options
amr.verbosity = 5

#amr.diffusion_treatment = implicit
#amr.additional_diffusivity = 1.0

#Anomaly modes - choose one
#amr.floating_ice_stable = true
#amr.floating_ice_basal_flux_is_dhdt = true


########################  SURFACE MASS BALANCE  ########################

surfaceFlux.type = axbyFlux # flux = a*x + b*y where a, b are constants

# background smb
surfaceFlux.a = 1.0
surfaceFlux.x.type = LevelData
surfaceFlux.x.n = 1
surfaceFlux.x.timeStep = 1.0e+10
surfaceFlux.x.startTime = 0.0
surfaceFlux.x.fileFormat = /nobackup/earjbar/data/antarctica.background.smb.2d.hdf5
surfaceFlux.x.name = SMB

# smb anomaly from climate model
surfaceFlux.b = 1.0
surfaceFlux.y.type = LevelData
surfaceFlux.y.fileFormat = /nobackup/earjbar/data/smb/ssp585/UKESM1-0-LL/UKESM1-0-LL_8km_anomaly_ssp585__%04d.2d.hdf5
surfaceFlux.y.name = smb_anomaly
surfaceFlux.y.n = 294
surfaceFlux.y.timeStep = 1.0
surfaceFlux.y.startTime = 2007
surfaceFlux.y.offset = 2007


########################  BASAL MELT  ########################

#no basal flux for grounded ice
basalFlux.type = maskedFlux
basalFlux.grounded.type = constantFlux
basalFlux.grounded.flux_value = 0.0

# try making product flux
basalFlux.floating.type = productFlux

# use ismip ramp to ease up melting, as opposed to sudden forcing
basalFlux.floating.flux1.type = pythonFlux
basalFlux.floating.flux1.module = ismip_ramp
basalFlux.floating.flux1.function = ramp

#ISMIP6 quadratic non-local basal melt parameterisation
basalFlux.floating.type = IMSIP6OceanForcing
basalFlux.floating.local = false
basalFlux.floating.gamma0 = @gamma0
basalFlux.floating.deltaT_file = @DELTAT
basalFlux.floating.basin_file = /nobackup/earjbar/data/imbie2_basin_mask_8km.2d.hdf5
basalFlux.floating.basin_var_name = basin_mask_0000
basalFlux.floating.n_basin_mask = 16

# ocean forcing
basalFlux.floating.file_format = /nobackup/earjbar/data/ocean_forcing/ssp585/UKESM1-0-LL/UKESM1-0-LL_SSP585_thermal_forcing_8km__%04d.2d.hdf5
basalFlux.floating.name = thermal_forcing_0000
basalFlux.floating.anomaly = true
basalFlux.floating.start_year = 2007
basalFlux.floating.end_year = 2300

# no freezing in ice-free regions
basalFlux.openSea.type = zeroFlux


########################  GIA SCHEME  ########################

topographyFlux.type  = buelerGIA
topographyFlux.nlayers = 2
topographyFlux.visc = 5e21 @UMV
topographyFlux.thk = 200000 # thickness in m
topographyFlux.flex = 13e23
topographyFlux.dt = 0.03125
topographyFlux.pad = 2
topographyFlux.includeElas = true
topographyFlux.oceanLoad = true

##########################  PLOTTING OPTIONS  ##########################

# Basic plot options
amr.plot_time_interval = 1.0
amr.plot_prefix = plot.@ID
amr.plot_style_amr = true

# Variables to write to file
amr.write_ismip6 = true
amr.write_solver_rhs = true
amr.write_viscous_tensor = true
amr.write_thickness_sources = true
amr.write_flux_velocities = false
amr.write_mask = true   # needed for GIAstats tool to work

# Checkpoint options
amr.check_interval = 256
amr.check_prefix = checkpoints/chk.@ID
amr.check_overwrite = 0

# Time stepping
main.maxTime = 500  # maximum time to run to
main.maxStep = 40960  # maximum number of steps to runx
amr.temporal_accuracy = 1
amr.cfl = 0.25  
amr.initial_cfl = 0.25  
amr.max_dt_grow_factor = 2.0 
amr.time_step_ticks = 0

#amr.restart_file = chk.ant-control-weertman-tsai.009216.2d.hdf5
amr.restart_set_time = false
amr.restart_time =  0
amr.offsetTime = 2007

# extra inputs added during runtime go here
